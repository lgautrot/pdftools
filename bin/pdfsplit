#!/usr/bin/perl
use strict;
use warnings;
use PDF::API2;
use Getopt::Long;
use Pod::Usage;

my ( $delete, $help, $range, $verbose );
GetOptions(
    "delete"  => \$delete,
    "help"    => \$help,
    "range=s" => \$range,
    "verbose" => \$verbose,
);

# How can we use this?
pod2usage(1) if ( not @ARGV or $help );

# process range
my ( @requested_pages, @items ) = ();
if ($range) {
    @items = split /,/, $range;
}
foreach my $item (@items) {
    if ( $item =~ m/^\d+$/ ) {
        push @requested_pages, $item;
    }
    elsif ( $item =~ m/^(\d+)-(\d+)$/ ) {
        push @requested_pages, $1 .. $2;
    }
    else {
        warn "skipping garbage: '$item'\n";
    }
}

# process pages
for my $old_file (@ARGV) {
    my $old_pdf = PDF::API2->open($old_file);
    print "read '$old_file': ", $old_pdf->pages, " pages\n" if $verbose;
    my @pages = 1 .. $old_pdf->pages unless @requested_pages;
    for my $page_num (@pages) {
        warn "skipping page #$page_num" if $page_num > $old_pdf->pages;
        my $new_pdf = PDF::API2->new();
        my $page = $new_pdf->importpage( $old_pdf, $page_num );
        $new_pdf->preferences(
            -singlepage => 1,
            -firstpage  => [ $new_pdf->openpage(1), -fit => 1 ],
        );
        my $inc = sprintf( "%03i", $page_num );
        ( my $new_file = $old_file ) =~ s/.pdf$/-$inc.pdf/;
        $new_pdf->saveas("$new_file");
        print "wrote '$new_file'\n" if $verbose;
        $new_pdf->end();
    }
    $old_pdf->end();
    if ($delete) {
        unlink $old_file or warn("could not delete '$old_file': $!\n"), next;
        print "deleted '$old_file'\n" if $verbose;
    }
}

__END__

=head1 NAME

pdfsplit - splits a PDF file into parts

=head1 DESCRIPTION

This program is intended to split PDF files passed as arguments on the
command-line then produce one or more PDF files.

If a range is specified, only those pages will be extracted from the orginal
file(s).

=head1 SYNOPSIS

 pdfsplit [--verbose|-v] [-r|--range <range>] [-d|--delete] <input file,...>
 pdfsplit -h|--help

=head1 OPTIONS

=over 4

=item -d ask for deletion of the original files upon completion

=item -h print this help message

=item -r specify a range

=item -v be verbose

=back

=head1 ARGUMENTS

=over 4

=item range

Can be in the form of:

 1,2,3,5,6

Or:

 1-5

Or a mix of both:

 1-3,5,6

=back

=head1 BUGS

Of course. I mean, possibly. If you find some, please drop me an email about
that.

=head1 COPYRIGHT

pdfsplit is Copyright (C) 2008-2010, Laurent Gautrot

This program is free software; you can redistribute it or modify it under the
same terms as Perl itself.

=head1 AUTHOR

Laurent Gautrot <l.gautrot@free.fr>

=cut
